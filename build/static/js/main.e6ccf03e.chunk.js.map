{"version":3,"sources":["components/wallpaper_item.js","components/wallpapers.js","components/search_bar.js","components/App.js","index.js"],"names":["WallpaperItem","_ref","file","data","preview","enabled","console","log","previewImage","images","resolutions","length","url","replace","subreddit","post_link","permalink","react_default","a","createElement","className","href","target","rel","over_18","src","width","alt","title","source","height","Wallpapers","files","map","wallpaper_item","key","id","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","_this2","type","onChange","event","search","value","name","placeholder","setState","onSearchTermChange","React","Component","App","currentSubreddit","sort","after","before","page","nextPage","fetch","then","res","json","children","window","scrollTo","catch","prevPage","newState","wallpaperSubreddits","portraitSubreddits","memesSubreddits","subredditsArray","sorts","changeSubreddit","sub","_this3","contentJSX","_this4","searchSubreddit","_","debounce","pagingJSX","buttonNext","onClick","buttonPrev","wallpapers","style","display","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","index","changeSort","search_bar","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e6ccf03e.chunk.js","sourcesContent":["import React from 'react';\n\nconst WallpaperItem = ({file}) => {\n    if (file.data.preview) {\n        if( file.data.preview.enabled) {\n            console.log(file.data);\n            let previewImage = file.data.preview.images[0].resolutions[file.data.preview.images[0].resolutions.length - 1].url;\n            previewImage = previewImage.replace(/&amp;/g,\"&\");\n            let subreddit = \"https://reddit.com/r/\" + file.data.subreddit;\n            let post_link = \"https://reddit.com\" + file.data.permalink;\n            return (\n                <div className=\"col-sm-12 col-md-6 col-lg-4\">\n                    <div className=\" card-link\">\n                    <div className=\"card\">\n                        <div className=\"card-img-top\">\n                            <a href={post_link} target=\"_blank\" rel=\"noopener noreferrer\"><button className=\"btn btn-secondary btn-sm top-right-float\">View Post</button></a>\n                            <a href={file.data.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {(file.data.over_18) ? <div className=\"p-4\">NSFW</div> : <img src={previewImage} className=\"card-img-top\" width=\"100%\" alt={file.data.title}/>}\n                            </a>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"card-title\">   \n                                <a href={file.data.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.data.title}</a>\n                            </div>\n                            <p className=\"card-text\">\n                                Resolution: {file.data.preview.images[0].source.width}x{file.data.preview.images[0].source.height}\n                                <br/>Posted on: <a href={subreddit} target=\"_blank\" rel=\"noopener noreferrer\">r/{file.data.subreddit}</a>\n                            </p>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n    return (\n        <div></div>\n    );\n    \n} \n\nexport default WallpaperItem;","import React from 'react';\nimport WallpaperItem from './wallpaper_item';\n\nconst Wallpapers = ({files}) => {\n    return (\n        <div className=\"row\">\n            {files.map((file) => (\n                    <WallpaperItem key={file.data.id} file={file} />  \n            ))}\n        </div>\n    );\n}\n\nexport default Wallpapers;","import React from 'react';\n\nclass SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            term: ''\n        }\n    }\n\n    render() {\n    return (\n        <div className=\"m-2\">\n            <div className=\"input-group mb-2\">\n                <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">r/</div>\n                </div>\n                <input type=\"text\" className=\"form-control\" onChange={event => this.search(event.target.value)} value={this.state.term} name=\"search\" placeholder=\"wallpapers\"/>\n            </div>\n        </div>\n    );\n    }\n\n    search(term) {\n        this.setState({term});\n        this.props.onSearchTermChange(term);\n    }\n}\n\nexport default SearchBar;","import _ from 'lodash';\nimport React from 'react';\nimport Wallpapers from './wallpapers';\nimport SearchBar from './search_bar';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.wallpaperSubreddits = 'wallpapers+wallpaper+widescreenwallpaper+wqhd_wallpaper';\n    this.portraitSubreddits = 'mobilewallpapers+amoledbackgrounds+verticalwallpapers';\n    this.memesSubreddits = 'memes+dankmemes+memeeconomy+animemes';\n    this.subredditsArray = ['wallpaper','wallpapers','widescreenwallpaper','wqhd_wallpaper','memes', 'dankmemes', 'memeeconomy','animemes', \n                                      'mobilewallpapers', 'amoledbackgrounds', 'verticalwallpapers'];\n    this.url = 'https://www.reddit.com/r/';\n    this.sorts = ['hot','new','top','controversial','rising'];\n  }\n    \n  state = {\n    currentSubreddit: 'wallpapers+wallpaper+widescreenwallpaper+wqhd_wallpaper',\n    sort: 'hot',\n    files: [],\n    after: null,\n    before: null,\n    page: 1\n  };\n\n  componentDidMount() {\n    this.changeSubreddit(this.state.currentSubreddit);\n  }\n\n  nextPage = () => {\n    fetch(this.url + this.state.currentSubreddit + \"/\" + this.state.sort + \".json?count=\" + (this.state.page * 25) + \"&after=\" + this.state.after)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState(() => ({\n          files: data.data.children,\n          after: data.data.after,\n          before: data.data.before,\n          page: this.state.page + 1\n        }));\n        window.scrollTo(0, 0);\n      })\n      .catch(console.log)\n  }\n\n  prevPage = () => {\n    fetch(this.url + this.state.currentSubreddit + \"/\" + this.state.sort + \".json?count=\" + (((this.state.page - 1) * 25) - 1) + \"&before=\" + this.state.before)\n      .then(res => res.json())\n      .then((data) => {\n        window.scrollTo(0, 0);\n        let newState = {\n          files: data.data.children,\n          after: data.data.after,\n          before: data.data.before\n        }\n        if (this.state.page > 1) {\n          newState.page = this.state.page - 1\n        }\n        this.setState(newState)\n      })\n      .catch(console.log)\n  }\n\n  changeSubreddit(sub) {\n    /* \n     * Empty the files so we will show 'Loading...'\n     * Reset page to 1\n     */\n    this.setState({\n      files: [],\n      currentSubreddit: sub,\n      page: 1\n    });\n    fetch(this.url + sub + \"/\" + this.state.sort + '.json')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({\n          files: data.data.children,\n          after: data.data.after,\n          before: data.data.before\n        });\n        window.scrollTo(0, 0);\n      })\n      .catch(console.log)\n  }\n\n  changeSort(sort) {\n    /* \n     * Empty the files so we will show 'Loading...'\n     * Reset page to 1\n     */\n    this.setState({\n      files: [],\n      sort: sort,\n      page: 1\n    })\n    fetch(this.url + this.state.currentSubreddit + \"/\" + sort + '.json')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({\n          files: data.data.children,\n          after: data.data.after,\n          before: data.data.before\n        });\n        window.scrollTo(0, 0);\n      })\n      .catch(console.log)\n  }\n\n  searchSubreddit(subreddit) {\n    if (subreddit.length !== 0) {\n      this.changeSubreddit(subreddit);\n    } else {\n      this.changeSubreddit(this.wallpaperSubreddits);\n    }\n  }\n\n  render () {\n    const searchSubreddit = _.debounce((term) => {this.searchSubreddit(term)}, 600);\n    let contentJSX;\n    if (this.state.files.length > 0) {\n      let pagingJSX;\n      const buttonNext = <button className=\"btn btn-primary\" type=\"submit\" onClick={this.nextPage}>Next</button>;\n      const buttonPrev = <button className=\"btn btn-secondary\" type=\"submit\" onClick={this.prevPage}>Previous</button>;\n      if (this.state.after === null && this.state.before !== null) {\n          // last page\n          pagingJSX = <div>{buttonPrev}</div>;\n      } else if (this.state.before === null && this.state.after !== null) {\n          // first page\n          pagingJSX = <div>{buttonNext}</div>;\n      } else if (this.state.before !== null && this.state.after !== null) {\n          // in between pages\n          pagingJSX = <div>{buttonPrev} <span className=\"p-3 text-black-50\">Page {this.state.page}</span> {buttonNext}</div>;\n      } else {\n        pagingJSX = <div>No Posts found.</div>;\n      }\n      contentJSX = <div className=\"m-2\"><Wallpapers files={this.state.files}/><br/><div className=\"center-block m-2\">{pagingJSX}</div></div>;\n    } else {\n      contentJSX = <div className=\"p-2\"><center>Loading...</center></div>;\n    }\n\n    let currentSubreddit;\n    if (this.state.currentSubreddit === this.wallpaperSubreddits) {\n      currentSubreddit = \"Landscape Wallpapers\";\n    } else if (this.state.currentSubreddit === this.portraitSubreddits) {\n      currentSubreddit = \"Portrait Wallpapers\";\n    } else if (this.state.currentSubreddit === this.memesSubreddits) {\n      currentSubreddit = \"Memes Subreddits\";\n    } else {\n      currentSubreddit = \"r/\" + this.state.currentSubreddit;\n    }\n\n    return (\n      <div className=\"container\">\n        <br/>\n        <div>\n          <div className=\"dropdown m-2\" style={{display: \"inline\"}}>\n            <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              {currentSubreddit} &nbsp;\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a className=\"dropdown-item\" href=\"#subChange\" onClick={() => this.changeSubreddit(this.wallpaperSubreddits)}>Landscape Wallpapers</a>\n              <a className=\"dropdown-item\" href=\"#subChange\" onClick={() => this.changeSubreddit(this.portraitSubreddits)}>Portrait Wallpapers</a>\n              <a className=\"dropdown-item\" href=\"#subChange\" onClick={() => this.changeSubreddit(this.memesSubreddits)}>Memes Subreddits</a>\n              {this.subredditsArray.map((subreddit, index) => (\n                <a className=\"dropdown-item\" key={index} href=\"#subChange\" onClick={() => this.changeSubreddit(subreddit)}>r/{subreddit}</a>\n              ))}\n            </div>\n          </div>\n          <div className=\"dropdown m-2\" style={{display: \"inline\"}}>\n            <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              {this.state.sort} &nbsp;\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              {this.sorts.map((sort, index) => (\n                <a className=\"dropdown-item\" key={index} href=\"#subChange\" onClick={() => this.changeSort(sort)}>{sort}</a>\n              ))}\n            </div>\n          </div>\n          <div className=\"m-3\"></div>\n          <SearchBar onSearchTermChange={term => searchSubreddit(term)}/>\n        </div>\n        <br/>\n        {contentJSX}\n        <br/>\n        <footer><center><p>Open-source available on <a href=\"https://github.com/gauravjot/react-reddit-wallpapers\">Github</a>.<br/>Some images can be explicit, please use it on your own risk.</p></center></footer>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}